variables:
  DOCKER_DRIVER: overlay2
  STANDARDFLAGS: -DHEPMC3_TEST_VALGRIND=ON -DCMAKE_CXX_FLAGS="-Wpedantic -Wall -Wextra" -DHEPMC3_ENABLE_PROTOBUFIO:BOOL=ON -DHEPMC3_ENABLE_ROOTIO:BOOL=ON -DHEPMC3_BUILD_EXAMPLES:BOOL=ON -DHEPMC3_ENABLE_TEST:BOOL=ON -DHEPMC3_TEST_VALGRIND:BOOL=ON -DHEPMC3_ENABLE_PYTHON:BOOL=ON -DHEPMC3_INSTALL_INTERFACES:BOOL=ON -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=ON -DHEPMC3_BUILD_DOCS:BOOL=ON
stages:
  - check_if_dockerfile_updated
  - build_docker_image
  - build
  - LCG
########################################################################
LCG_99_x86_64-centos7-gcc8-opt:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch"
  image: gitlab-registry.cern.ch/sft/docker:lcg-cc7
  stage: LCG
  before_script:
    - export LCGPLATFORM=x86_64-centos7-gcc8-opt
    - export LCG_LOCATION=/cvmfs/sft.cern.ch/lcg/releases/LCG_99
    - source /cvmfs/sft.cern.ch/lcg/contrib/gcc/8.2.0/${LCGPLATFORM}/setup.sh
    - source ${LCG_LOCATION}/ROOT/v6.22.06/${LCGPLATFORM}/ROOT-env.sh 
    - export PATH=/cvmfs/sft.cern.ch/lcg/contrib/CMake/latest/Linux-x86_64/bin/:${PATH}
    - export ROOTSYS=${LCG_LOCATION}/ROOT/v6.22.06/${LCGPLATFORM}/
    - source ${LCG_LOCATION}/valgrind/3.16.1/${LCGPLATFORM}/valgrind-env.sh
    - source ${LCG_LOCATION}/graphviz/2.40.1/${LCGPLATFORM}/graphviz-env.sh
    - source ${LCG_LOCATION}/zlib/1.2.11/${LCGPLATFORM}/zlib-env.sh
    - source ${LCG_LOCATION}/Python/3.8.6/${LCGPLATFORM}/Python-env.sh
    - source ${LCG_LOCATION}/HepMC/2.06.11/${LCGPLATFORM}/HepMC-env.sh 
    - source ${LCG_LOCATION}/protobuf/2.5.0/${LCGPLATFORM}/protobuf-env.sh
#LCG 99 calls its variable Protobuf__HOME instead of Protobuf_HOME
    - export Protobuf_ROOT=$(pkg-config protobuf --variable=prefix)
  script:
    - export
    - mkdir build
    - cd build
    - cmake ..  -DHEPMC3_TEST_VALGRIND=ON -DHEPMC3_USE_INTERFACE_FROM_PYTHIA8:BOOL=OFF -DHEPMC3_ENABLE_PYTHON:BOOL=ON -DHEPMC3_PYTHON_VERSIONS=3 -DCMAKE_INSTALL_PREFIX=$(pwd)/install -DHEPMC3_Python_SITEARCH38=$(pwd)/install/lib/python3.8/site-packages -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DPYTHIA8_ROOT_DIR=${LCG_LOCATION}/MCGenerators/pythia8/244/${LCGPLATFORM} -DPHOTOSPP_ROOT_DIR=${LCG_LOCATION}/MCGenerators/photos++/3.64/${LCGPLATFORM}/ -DTAUOLAPP_ROOT_DIR=${LCG_LOCATION}/MCGenerators/tauola++/1.1.8/${LCGPLATFORM}/ -DMCTESTER_ROOT_DIR=${LCG_LOCATION}/MCGenerators/mctester/1.25.0/${LCGPLATFORM}/ -DHEPMC2_ROOT_DIR=${LCG_LOCATION}/HepMC/2.06.11/${LCGPLATFORM}/ -DGRAPHVIZ_ROOT=${LCG_LOCATION}/graphviz/2.40.1/${LCGPLATFORM}/   -DHEPMC3_ENABLE_PROTOBUFIO:BOOL=ON -DProtobuf_INCLUDE_DIR=${Protobuf_ROOT}/include -DProtobuf_LIBRARY=${Protobuf_ROOT}/lib/libprotobuf.so
    - make -j $(nproc)
    - ctest --output-on-failure
    - make -j $(nproc) install


LCG_95_x86_64-centos7-gcc8-opt:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch"
  image: gitlab-registry.cern.ch/sft/docker:lcg-cc7
  stage: LCG
  before_script:
    - export LCGPLATFORM=x86_64-centos7-gcc8-opt
    - source /cvmfs/sft.cern.ch/lcg/contrib/gcc/8.2.0/${LCGPLATFORM}/setup.sh
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/ROOT/6.16.00/${LCGPLATFORM}/ROOT-env.sh 
    - export PATH=/cvmfs/sft.cern.ch/lcg/contrib/CMake/3.13.4/Linux-x86_64/bin/:${PATH}
    - export ROOTSYS=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/ROOT/6.16.00/${LCGPLATFORM}/
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/valgrind/3.13.0/${LCGPLATFORM}/valgrind-env.sh
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/graphviz/2.28.0/${LCGPLATFORM}/graphviz-env.sh
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/zlib/1.2.11/${LCGPLATFORM}/zlib-env.sh
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/Python/2.7.15/${LCGPLATFORM}/Python-env.sh
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/protobuf/2.5.0/${LCGPLATFORM}/protobuf-env.sh
#LCG 99 calls its variable Protobuf__HOME instead of Protobuf_HOME
    - export Protobuf_ROOT=$(pkg-config protobuf --variable=prefix)
  script:
    - export
    - mkdir build
    - cd build
    - cmake .. -DHEPMC3_TEST_VALGRIND=ON -DCMAKE_CXX_FLAGS="-Wpedantic -Wall -Wextra" -DHEPMC3_ENABLE_PYTHON:BOOL=ON -DHEPMC3_PYTHON_VERSIONS=2 -DCMAKE_INSTALL_PREFIX=$(pwd)/install -DHEPMC3_Python_SITEARCH27=$(pwd)/install/lib/python2.7/site-packages -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DPYTHIA8_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/pythia8/240/${LCGPLATFORM} -DPHOTOSPP_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/photos++/3.61/${LCGPLATFORM}/ -DTAUOLAPP_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/tauola++/1.1.6/${LCGPLATFORM}/ -DMCTESTER_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/mctester/1.25.0/${LCGPLATFORM}/ -DHEPMC2_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/HepMC/2.06.09/${LCGPLATFORM}/ -DGRAPHVIZ_ROOT=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/graphviz/2.28.0/${LCGPLATFORM}/ 
      -DHEPMC3_ENABLE_PROTOBUFIO:BOOL=ON -DProtobuf_INCLUDE_DIR=${Protobuf_ROOT}/include -DProtobuf_LIBRARY=${Protobuf_ROOT}/lib/libprotobuf.so
    #sourcing python is enough -DPython_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/Python/2.7.15/${LCGPLATFORM}/
    - make -j $(nproc)
    - ctest --output-on-failure
    - make -j $(nproc) install
########################################################################
LCG_95_x86_64-ubuntu1804-gcc8-opt:
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch"
  image: gitlab-registry.cern.ch/sft/docker:lcg-ubuntu18
  stage: LCG
  before_script:
    - export LCGPLATFORM=x86_64-ubuntu1804-gcc8-opt
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/ROOT/6.16.00/${LCGPLATFORM}/ROOT-env.sh
    - export PATH=/cvmfs/sft.cern.ch/lcg/contrib/CMake/3.13.4/Linux-x86_64/bin/:${PATH}
    - export ROOTSYS=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/ROOT/6.16.00/${LCGPLATFORM}/
    - export CXX=/usr/bin/g++-8
    - export CC=/usr/bin/gcc-8
    - export FC=/usr/bin/gfortran-8
    - export LD_LIBRARY_PATH=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/tauola++/1.1.6/${LCGPLATFORM}/lib:${LD_LIBRARY_PATH}
    - export LD_LIBRARY_PATH=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/photos++/3.61/${LCGPLATFORM}/lib/:${LD_LIBRARY_PATH}
    - export LD_LIBRARY_PATH=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/pythia8/240/${LCGPLATFORM}/lib/:${LD_LIBRARY_PATH}
    - export LD_LIBRARY_PATH=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/mctester/1.25.0/${LCGPLATFORM}/lib/:${LD_LIBRARY_PATH}
    - export LD_LIBRARY_PATH=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/HepMC/2.06.09/${LCGPLATFORM}/lib/:${LD_LIBRARY_PATH}
    - export LD_LIBRARY_PATH=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/graphviz/2.28.0/${LCGPLATFORM}/lib/:${LD_LIBRARY_PATH}
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/valgrind/3.13.0/${LCGPLATFORM}/valgrind-env.sh
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/graphviz/2.28.0/${LCGPLATFORM}/graphviz-env.sh
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/Python/2.7.15/${LCGPLATFORM}/Python-env.sh
    - source /cvmfs/sft.cern.ch/lcg/releases/LCG_95/protobuf/2.5.0/${LCGPLATFORM}/protobuf-env.sh
#LCG 99 calls its variable Protobuf__HOME instead of Protobuf_HOME
    - export Protobuf_ROOT=$(pkg-config protobuf --variable=prefix)
  script:
    - export
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_CXX_FLAGS="-Wpedantic -Wall -Wextra" -DHEPMC3_ENABLE_PYTHON:BOOL=ON -DHEPMC3_PYTHON_VERSIONS=2 -DCMAKE_INSTALL_PREFIX=$(pwd)/install -DHEPMC3_Python_SITEARCH27=$(pwd)/install/lib/python2.7/site-packages -DHEPMC3_BUILD_EXAMPLES=ON -DHEPMC3_ENABLE_TEST=ON -DHEPMC3_INSTALL_INTERFACES=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=On -DPYTHIA8_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/pythia8/240/${LCGPLATFORM} -DPHOTOSPP_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/photos++/3.61/${LCGPLATFORM}/ -DTAUOLAPP_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/tauola++/1.1.6/${LCGPLATFORM}/ -DMCTESTER_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/MCGenerators/mctester/1.25.0/${LCGPLATFORM}/ -DHEPMC2_ROOT_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/HepMC/2.06.09/${LCGPLATFORM}/ -DGRAPHVIZ_ROOT=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/graphviz/2.28.0/${LCGPLATFORM}/   
      -DHEPMC3_ENABLE_PROTOBUFIO:BOOL=ON -DProtobuf_INCLUDE_DIR=${Protobuf_ROOT}/include -DProtobuf_LIBRARY=${Protobuf_ROOT}/lib/libprotobuf.so
#sourcing python is enough -DPython_DIR=/cvmfs/sft.cern.ch/lcg/releases/LCG_95/Python/2.7.15/${LCGPLATFORM}/
    - make -j $(nproc)
    - ctest --output-on-failure
    - make -j $(nproc) install
########################################################################
debian-salsa:
  only:
    variables:
     - $CI_SERVER_HOST=="salsa.debian.org"
  image: debian:unstable
  stage: build
  before_script:
    - apt-get update 
    - apt-get install -y -qq cmake g++   apt-utils
    - apt-get install -y -qq gfortran  doxygen wget graphviz libz-dev
    - apt-get install -y -qq devscripts build-essential lintian dh-make
    - apt-get install -y -qq libpython-dev python
    - apt-get install -y -qq libpython3-dev python3
    - apt-get install -y -qq dh-python
  script:
    - export
    - rm .gitlab-ci.yml
#    - wget https://gitlab.cern.ch/hepmc/HepMC3/-/archive/3.2.5/HepMC3-3.2.5.tar.gz
    - wget https://gitlab.cern.ch/hepmc/HepMC3/-/archive/master/HepMC3-master.tar.gz
#    - wget https://gitlab.cern.ch/hepmc/HepMC3/-/archive/3.2.0/HepMC3-3.2.0.tar.gz
#    - mv HepMC3-3.2.0.tar.gz  ../hepmc3_3.2.0.orig.tar.gz
    - debuild -us -uc






.check_commit_CentOS: &check_commit_CentOS
  stage: check_if_dockerfile_updated
  image: 
        name: alpine/git
        entrypoint: [""]
  script:
        - rm -rf todo-CentOS_$FREL.txt
        - git log -1 | grep CentOSDockerfile$FREL | head -n 1 >> todo-CentOS_$FREL.txt || touch todo-CentOS_$FREL.txt
        - cat todo-CentOS_$FREL.txt
        - git diff --name-only HEAD HEAD~1 | grep CI/CentOS/Dockerfile$FREL | head -n 1 >> todo-CentOS_$FREL.txt || touch todo-CentOS_$FREL.txt
        - if [ -s todo-CentOS_$FREL.txt ]; then cat CI/CentOS/Dockerfile$FREL  > todo-CentOS_$FREL.txt; fi
        - if [ $CI_PIPELINE_SOURCE == "schedule" ]; then cat CI/CentOS/Dockerfile$FREL  > todo-CentOS_$FREL.txt; fi
        - cat todo-CentOS_$FREL.txt
        - exit 0
  variables:
    GIT_DEPTH: "3"
  artifacts:
    paths:
      - todo-CentOS_$FREL.txt
    expire_in: 1 day

.check_commit_Archlinux: &check_commit_Archlinux
  stage: check_if_dockerfile_updated
  image: 
        name: alpine/git
        entrypoint: [""]
  script:
        - rm -rf todo-Archlinux_$FREL.txt
        - git log -1 | grep ArchlinuxDockerfile$FREL | head -n 1 >> todo-Archlinux_$FREL.txt || touch todo-Archlinux_$FREL.txt
        - git diff --name-only HEAD HEAD~1 | grep CI/Archlinux/Dockerfile | head -n 1 >> todo-Archlinux_$FREL.txt || touch todo-Archlinux_$FREL.txt
        - if [ -s todo-Archlinux_$FREL.txt ]; then cat CI/Archlinux/Dockerfile | sed 's/Archlinux:35/Archlinux:$FREL/g' > todo-Archlinux_$FREL.txt; fi
        - if [ $CI_PIPELINE_SOURCE == "schedule" ]; then cat CI/Archlinux/Dockerfile | sed 's/Archlinux:35/Archlinux:$FREL/g' > todo-Archlinux_$FREL.txt; fi
        - cat todo-Archlinux_$FREL.txt
        - exit 0
  variables:
    GIT_DEPTH: "3"
  artifacts:
    paths:
      - todo-Archlinux_$FREL.txt
    expire_in: 1 day


.check_commit_Fedora: &check_commit_Fedora
  stage: check_if_dockerfile_updated
  image: 
        name: alpine/git
        entrypoint: [""]
  script:
        - rm -rf todo-Fedora_$FREL.txt
        - git log -1 | grep FedoraDockerfile$FREL | head -n 1 >> todo-Fedora_$FREL.txt || touch todo-Fedora_$FREL.txt
        - git diff --name-only HEAD HEAD~1 | grep CI/Fedora/Dockerfile | head -n 1 >> todo-Fedora_$FREL.txt || touch todo-Fedora_$FREL.txt
        - if [ -s todo-Fedora_$FREL.txt ]; then cat CI/Fedora/Dockerfile | sed 's/fedora:35/fedora:'$FREL'/g' > todo-Fedora_$FREL.txt; fi
        - if [ $CI_PIPELINE_SOURCE == "schedule" ]; then cat CI/Fedora/Dockerfile | sed 's/fedora:35/fedora:$FREL/g' > todo-Fedora_$FREL.txt; fi
        - cat todo-Fedora_$FREL.txt
        - exit 0
  variables:
    GIT_DEPTH: "3"
  artifacts:
    paths:
      - todo-Fedora_$FREL.txt
    expire_in: 1 day

.build_image_Archlinux: &build_image_Archlinux
  stage: build_docker_image
  image: 
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: [""]
  script:
        - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
        - if [ -s todo-Archlinux_$FREL.txt ]; then /kaniko/executor --context $CI_PROJECT_DIR --dockerfile todo-Archlinux_$FREL.txt --destination $CI_REGISTRY_IMAGE:Archlinux_$FREL ; fi
  variables:
    GIT_DEPTH: "1"

.build_image_Fedora: &build_image_Fedora
  stage: build_docker_image
  image: 
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: [""]
  script:
        - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
        - if [ -s todo-Fedora_$FREL.txt ]; then /kaniko/executor --context $CI_PROJECT_DIR --dockerfile todo-Fedora_$FREL.txt --destination $CI_REGISTRY_IMAGE:Fedora_$FREL ; fi
  variables:
    GIT_DEPTH: "2"


.build_image_CentOS: &build_image_CentOS
  stage: build_docker_image
  image: 
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: [""]
  script:
        - echo $CI_REGISTRY_IMAGE:CentOS_$FREL CI_PROJECT_DIR
        - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
        - if [ -s todo-CentOS_$FREL.txt ]; then /kaniko/executor --context $CI_PROJECT_DIR --dockerfile todo-CentOS_$FREL.txt --destination $CI_REGISTRY_IMAGE:CentOS_$FREL ; fi
  variables:
    GIT_DEPTH: "2"


.any: &any
  image: $CI_REGISTRY_IMAGE:${OS}_${FREL}
  stage: build
  only:
    variables:
     - $CI_SERVER_HOST=="gitlab.cern.ch"
  before_script:
    - set -x
    - uname -a 
    - cat /etc/issue
    - export GIT_DEPTH=1
  cache:
   - key: $TOOLSET-cache-$FREL
     paths:
       - $TOOLSET-cache-$FREL/

.cmake: &cmake
    - export COMPILATIONSTART=$(date +%s)
    - $CMAKE --version
    - $CMAKE -S . -B BUILD  $CACHINGFLAGS  ${STANDARDFLAGS} ${EXTRACMAKEFLAGS}
    - $CMAKE --build BUILD -j 10
    - export COMPILATIONEND=$(date +%s)
    - $CMAKE --install BUILD
    - echo $COMPILATIONSTART $COMPILATIONEND $(echo $COMPILATIONEND-$COMPILATIONSTART | bc -l)
    - $CTEST --test-dir BUILD --output-on-failure 

       
.oldcmake: &oldcmake
    - export COMPILATIONSTART=$(date +%s)
    - $CMAKE --version
    - mkdir -p BUILD
    - cd  BUILD
    - $CMAKE ..  $CACHINGFLAGS $CACHINGFLAGS  ${STANDARDFLAGS} ${EXTRACMAKEFLAGS}
    - make -j 10
    - export COMPILATIONEND=$(date +%s)
    - make install
    - echo $COMPILATIONSTART $COMPILATIONEND $(echo $COMPILATIONEND-$COMPILATIONSTART | bc -l)
    - $CTEST  --output-on-failure 

.ex:  &ex
    - if [ "${TOOLSET}" == "LLVM" ]; then export CXX=clang++; export CC=clang; export FC=gfortran; fi  
    - if [ "${TOOLSET}" == "GNU" ]; then export CXX=g++; export CC=gcc; export FC=gfortran; fi   
    - if [ "${TOOLSET}" == "INTEL" ]; then source /opt/intel/oneapi/setvars.sh; export CXX=icx; export CC=icx; export FC=ifx; fi   
    - export CCACHE_BASEDIR=`pwd`/$TOOLSET-cache-$FREL    
    - export CCACHE_BASEDIR=${PWD}
    - export CCACHE_DIR=`pwd`/$TOOLSET-cache-$FREL/ccache
    - export CCACHE_COMPILERCHECK=content
    - export CACHINGFLAGS="-DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache "
    - export CACHINGFLAGS=
    - export CMAKE=cmake3
    - export CTEST=ctest3
    - if [ "${FREL}" == "7" ]; then export CMAKE=cmake3; CTEST=ctest3; fi
    - if [ "${FREL}" == "0" ]; then export CMAKE=cmake; CTEST=ctest; fi
    - if [ "${FREL}" == "23" ]; then export CMAKE=cmake; CTEST=ctest; fi
    - export CACHINGFLAGS="-DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache "
    
.any-cmake: &any-cmake
  extends: .any
  script:
      - *ex
      - *cmake
  needs:
    - job: build_image_${OS}${FREL}

.any-oldcmake: &any-oldcmake
  extends: .any
  script:
      - *ex
      - *oldcmake

###########################################################################
#Check commit messages

check_commit_Fedora35:
  variables:
    OS: Fedora
    FREL: 35
  extends: .check_commit_Fedora
    
check_commit_Fedora34:
  variables:
    OS: Fedora
    FREL: 34
  extends: .check_commit_Fedora

check_commit_Fedora33:
  variables:
    OS: Fedora
    FREL: 33
  extends: .check_commit_Fedora


check_commit_Fedora24:
  variables:
    OS: Fedora
    FREL: 24
  extends: .check_commit_Fedora


check_commit_Fedora23:
  variables:
    OS: Fedora
    FREL: 23
  extends: .check_commit_Fedora

check_commit_CentOS9:
  variables:
    OS: centOS
    FREL: 9
  extends: .check_commit_CentOS

check_commit_CentOS8:
  variables:
    OS: centOS
    FREL: 8
  extends: .check_commit_CentOS

check_commit_CentOS7:
  variables:
    OS: centOS
    FREL: 7
  extends: .check_commit_CentOS

check_commit_Archlinux0:
  variables:
    OS: Archlinux
    FREL: 0
  extends: .check_commit_Archlinux

###########################################################################
#Build images

build_image_Fedora35:
  variables:
    OS: Fedora
    FREL: 35
  extends: .build_image_Fedora
  needs:
    - job: check_commit_Fedora35

build_image_Fedora34:
  variables:
    OS: Fedora
    FREL: 34
  extends: .build_image_Fedora
  needs:
    - job: check_commit_Fedora34

build_image_Fedora33:
  variables:
    OS: Fedora
    FREL: 33
  extends: .build_image_Fedora
  needs:
    - job: check_commit_Fedora33

build_image_Fedora24:
  variables:
    OS: Fedora
    FREL: 24
  extends: .build_image_Fedora
  needs:
    - job: check_commit_Fedora24

build_image_Fedora23:
  variables:
    OS: Fedora
    FREL: 23
  extends: .build_image_Fedora
  needs:
    - job: check_commit_Fedora23

build_image_CentOS9:
  variables:
    OS: CentOS
    FREL: 9
  extends: .build_image_CentOS
  needs:
    - job: check_commit_CentOS9

build_image_CentOS8:
  variables:
    OS: CentOS
    FREL: 8
  extends: .build_image_CentOS
  needs:
    - job: check_commit_CentOS8

build_image_CentOS7:
  variables:
    OS: CentOS
    FREL: 7
  extends: .build_image_CentOS
  needs:
    - job: check_commit_CentOS7

build_image_Archlinux0:
  variables:
    OS: Archlinux
    FREL: 0
  extends: .build_image_Archlinux
  needs:
    - job: check_commit_Archlinux0

###########################################################################
Fedora35-GNU:
  variables:
    OS: Fedora
    FREL: 35
    TOOLSET: GNU
    EXTRACMAKEFLAGS:
  extends: .any-cmake
  needs:
    - job: build_image_Fedora35

Fedora34-GNU:
  variables:
    OS: Fedora
    FREL: 34
    TOOLSET: GNU
    EXTRACMAKEFLAGS:
  extends: .any-cmake
  needs:
    - job: build_image_Fedora34

Fedora34-LLVM:
  variables:
    OS: Fedora
    FREL: 34
    TOOLSET: LLVM
    EXTRACMAKEFLAGS:
  extends: .any-cmake
  needs:
    - job: build_image_Fedora34

Fedora33-GNU-pypy:
  variables:
    OS: Fedora
    FREL: 33
    TOOLSET: GNU
    EXTRACMAKEFLAGS: -DHEPMC3_PYTHON_VERSIONS=2,3,pypy2 
  extends: .any-cmake
  needs:
    - job: build_image_Fedora33

Fedora24-GNU:
  variables:
    OS: Fedora
    FREL: 24
    TOOLSET: GNU
    EXTRACMAKEFLAGS: -DHEPMC3_TEST_LZMA:BOOL=OFF
  extends: .any-oldcmake
  needs:
    - job: build_image_Fedora24

Fedora23-LLVM-noroot-nopython-noprotobuf:
  variables:
    OS: Fedora
    FREL: 23
    TOOLSET: LLVM
    EXTRACMAKEFLAGS: -DHEPMC3_ENABLE_PROTOBUFIO:BOOL=OFF -DHEPMC3_ENABLE_ROOTIO:BOOL=OFF -DHEPMC3_ENABLE_PYTHON:BOOL=OFF -DHEPMC3_TEST_LZMA:BOOL=OFF
  extends: .any-oldcmake
  needs:
    - job: build_image_Fedora23

Fedora23-GNU-noroot-nopython-noprotobuf:
  variables:
    OS: Fedora
    FREL: 23
    TOOLSET: GNU
    EXTRACMAKEFLAGS: -DHEPMC3_ENABLE_PROTOBUFIO:BOOL=OFF -DHEPMC3_ENABLE_ROOTIO:BOOL=OFF -DHEPMC3_ENABLE_PYTHON:BOOL=OFF -DHEPMC3_TEST_LZMA:BOOL=OFF
  extends: .any-oldcmake
  needs:
    - job: build_image_Fedora23


#CentOS9-INTEL:
#  variables:
#    OS: CentOS
#    FREL: 9
#    TOOLSET: INTEL
#    EXTRACMAKEFLAGS: -DCMAKE_EXE_LINKER_FLAGS=-lstdc++
#  extends: .any-cmake
#  needs:
#    - job: build_image_CentOS9

CentOS9-GNU:
  variables:
    OS: CentOS
    FREL: 9
    TOOLSET: GNU    
    EXTRACMAKEFLAGS:
  extends: .any-cmake
  needs:
    - job: build_image_CentOS9

CentOS8-GNU:
  variables:
    OS: CentOS
    FREL: 8
    TOOLSET: GNU    
    EXTRACMAKEFLAGS:
  extends: .any-cmake
  needs:
    - job: build_image_CentOS8

CentOS7-GNU:
  variables:
    OS: CentOS
    FREL: 7
    TOOLSET: GNU    
    EXTRACMAKEFLAGS:
  extends: .any-cmake
  needs:
    - job: build_image_CentOS7
    
Archlinux0-GNU:
  variables:
    OS: Archlinux
    FREL: 0
    TOOLSET: GNU
    EXTRACMAKEFLAGS:
  extends: .any-cmake

